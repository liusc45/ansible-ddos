---
- name: Deploy and run image downloader
  hosts: all
  become: true

  tasks:
    - name: Install required packages
      apt:
        name: 
          - curl
          - sudo
        state: present

    - name: Configure sudo for root password authentication
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^Defaults.*requiretty'
        line: 'Defaults !requiretty'

    - name: Upload URL list to target machines
      copy:
        src: final_image_urls_combined.txt
        dest: /tmp/final_image_urls_combined.txt
        owner: root
        group: root
        mode: '0644'

    - name: Create the download script on target machines
      copy:
        content: |
          #!/bin/bash

          # Temporary directory for downloads
          temp_dir=$(mktemp -d)

          # URL list file
          url_list="/tmp/final_image_urls_combined.txt"

          if [ ! -f "$url_list" ]; then
              echo "Error: $url_list does not exist."
              exit 1
          fi

          echo "Downloading images to temporary directory: $temp_dir"

          request_count=0
          total_bandwidth=0

          start_time=$(date +%s)
          duration=$((5 * 3600))  # 5 hours

          while true; do
              current_time=$(date +%s)
              elapsed_time=$((current_time - start_time))

              if [[ $elapsed_time -ge $duration ]]; then
                  echo "5-hour runtime reached. Exiting." >> /tmp/image_downloader.log
                  break
              fi

              while IFS= read -r url; do
                  if [[ -n "$url" ]]; then
                      echo "Downloading $url"
                      file_name=$(basename "$url")
                      output_file="$temp_dir/$file_name"

                      curl -s --limit-rate 0 -o "$output_file" "$url"
                      file_size=$(stat -c%s "$output_file" 2>/dev/null || echo 0)
                      total_bandwidth=$((total_bandwidth + file_size))
                      request_count=$((request_count + 1))

                      # Log the details immediately
                      echo "Request: $url, Size: $((file_size / 1024)) KB, Total Requests: $request_count, Total Bandwidth: $((total_bandwidth / 1024 / 1024)) MB" >> /tmp/image_downloader.log
                  fi
              done < "$url_list"

              echo "$(date) Completed one iteration of downloads." >> /tmp/image_downloader.log
          done

          # Cleanup
          echo "Cleaning up temporary directory: $temp_dir" >> /tmp/image_downloader.log
          rm -rf "$temp_dir"
        dest: /tmp/download_images_temp.sh
        owner: root
        group: root
        mode: '0755'

    - name: Create a systemd service for the downloader
      copy:
        content: |
          [Unit]
          Description=Image Downloader Service
          After=network.target

          [Service]
          ExecStart=/bin/bash /tmp/download_images_temp.sh
          Restart=always
          User=root

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/image_downloader.service
        owner: root
        group: root
        mode: '0644'

    - name: Enable and start the downloader service
      systemd:
        name: image_downloader.service
        enabled: true
        state: started

    - name: Monitor first download completion on all servers
      wait_for:
        path: /tmp/image_downloader.log
        search_regex: "Request:"
        timeout: 300  # 5 minutes timeout
